<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Grabsikel - {% block title %}{% endblock %}</title>

  <link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <link rel="stylesheet" href="/css/styles.css">

  {% block header %}{% endblock %}
</head>
<body>
  <div class="container-responsive p-0">
    {% block body %}{% endblock %}
  </div>
  {% if CURRENT_BOOK %}
    <div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <form action="/map/feedback" name="form_feedback" class="modal-content" method="POST" autocomplete="off">
          <input type="hidden" name="book_id" value="{{ CURRENT_BOOK._id }}">
          
          <div class="modal-header">
            <h5 class="modal-title" id="feedbackModalLabel">Feedback</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">  
            <h6 class="card-title">How's your trip? Tell us about your experience.</h6>
            <div id="error"></div>
            <div class="form-group">
              <label for="feedback" class="form-label">Feedback</label>
              <textarea name="feedback" id="feedback" class="form-control" rows="4" placeholder="Explain what you experience."></textarea>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn text-muted" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" name="submit" class="btn btn-primary">Submit Feedback</button>
          </div>
        </form>
      </div>
    </div>
    <button type="button" class="d-none" data-bs-target="#feedbackModal" data-bs-toggle="modal" id="feedbackButton"></button>
  {% endif %}
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.socket.io/4.4.0/socket.io.min.js" integrity="sha384-1fOn6VtTq3PWwfsOrk45LnYcGosJwzMHv+Xh/Jx5303FVOXzEnw0EpLv30mtjmlj" crossorigin="anonymous"></script>
  <script>
    const socket = io(`${window.location.host}/commuters`, {
      path: '/ws'
    })

    socket.on('no drivers available', () => {
      alert('Sorry, there are no available drivers found for you. Please try again later.')
      window.location.reload()
    })

    socket.on('driver here', () => {
      alert('Your driver arrived to pick you up.')
    })

    socket.on('ride completed', () => {
      const formFeedback = document.querySelector('#feedbackModal form')

      formFeedback?.addEventListener('submit', function(e) {
        e.preventDefault()

        const book_id = this.book_id.value
        const feedback = this.feedback.value

        if (!feedback) {
          return showError('Please provide your feedback.')
        }

        this.submit.disabled = true

        axios.post(this.action, {
          book_id,
          feedback
        })
          .then(res => window.location.reload())
          .catch(err => showError((err.response.data.errors || ['Server error. Please contact your developer.'])[0]))

        this.submit.disabled = false
      })

      document.getElementById('feedbackButton').click()
    })

    const escapeHTML = (string) => {
      const p = document.createElement('p')
      p.innerHTML = string

      return p.innerText
    }

    const showError = (error, elem_id = 'error') => {
      const container = document.getElementById(elem_id)

      if (!container) {
        return
      }

      container.innerHTML = `
        <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
          ${escapeHTML(error)}
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `
    }

    document.addEventListener('DOMContentLoaded', () => {
      const btnMenu = document.getElementById('btn-toggle-menu');
      const btnCloseMenu = document.getElementById('btn-close-menu');

      btnMenu?.addEventListener('click', () => {
        const aside = document.querySelector('aside');

        aside.style.transform = 'translateX(-100%)';

        setTimeout(() => {
          aside.style.transform = 'translateX(0%)';
        }, 100);

        aside.classList.add('fixed-top', 'h-100');
        aside.classList.remove('d-none');
        document.body.classList.add('overflow-hidden');
      });

      btnCloseMenu?.addEventListener('click', () => {
        const aside = document.querySelector('aside');

        aside.style.transform = 'translateX(-100%)';

        setTimeout(() => {
          aside.classList.remove('fixed-top', 'h-100');
          aside.classList.add('d-none');
          document.body.classList.remove('overflow-hidden');
        }, 300);
      });

      window.addEventListener('resize', (e) => {
        if (document.body.clientWidth >= 751) {
          const aside = document.querySelector('aside');

          if (!aside) {
            return
          }

          aside.classList.remove('fixed-top', 'h-100');
          aside.classList = 'd-none ' + aside.classList;
          aside.style.removeProperty('transform');
          document.body.classList.remove('overflow-hidden');
        }
      })
    });
  </script>
  
  {% block footer %}{% endblock %}
</body>
</html>