{% extends "base.twig" %}

{% block title %}
  Map
{% endblock %}

{% block header %}
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin=""/>

  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
    integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
    crossorigin=""></script>

  <!-- Load Esri Leaflet from CDN -->
  <script src="https://unpkg.com/esri-leaflet@2.5.2/dist/esri-leaflet.js"
    integrity="sha512-vC48cQq5LmjsPvqNIIoED0aUZ8POSJ0Z1mVexOqjVjAsJo32QUoT/2Do4kFKJjuPLIonpb/Hns7EqZ1LrlwSzw=="
    crossorigin=""></script>

  <!-- Load Esri Leaflet Geocoder from CDN -->
  <link rel="stylesheet" href="https://unpkg.com/esri-leaflet-geocoder@2.3.3/dist/esri-leaflet-geocoder.css"
    integrity="sha512-IM3Hs+feyi40yZhDH6kV8vQMg4Fh20s9OzInIIAc4nx7aMYMfo+IenRUekoYsHZqGkREUgx0VvlEsgm7nCDW9g=="
    crossorigin="">
  
  <script src="https://unpkg.com/esri-leaflet-geocoder@2.3.3/dist/esri-leaflet-geocoder.js"
    integrity="sha512-HrFUyCEtIpxZloTgEKKMq4RFYhxjJkCiF5sDxuAokklOeZ68U2NPfh4MFtyIVWlsKtVbK5GD2/JzFyAfvT5ejA=="
    crossorigin=""></script>
{% endblock %}

{% block body %}
  <div class="vh-100">
    <div class="d-flex flex-column h-100">
      {% include "commuter/layouts/header.twig" %}
      <main class="flex-fill p-3">
        <h1 class="h4 mb-4">Your Ride</h1>
        <div id="error"></div>
        <div class="card mb-4">
          <p class="position-absolute top-50 start-50 translate-middle">
            <i class="las la-spinner la-spin"></i>
            Loading please wait...
          </p>
          <div id="map" style="height: 360px"></div>
          <noscript>
            Cannot load the map, please turn on JavaScript
          </noscript>
        </div>
        {% if CURRENT_BOOK %}
          <h2 class="h4 mb-4 text-center text-muted">Ride Details</h2>
          <div class="card">
            <div class="card-body">
              {% if CURRENT_BOOK.driver %}
                <div class="d-flex align-items-center">
                  {% if CURRENT_BOOK.driver.profile.picture %}
                    <img src="/api/uploads/{{ CURRENT_BOOK.driver.profile.picture }}?width=80&height=80" width="80" height="80" class="rounded border" alt="">
                  {% else %}
                    <img src="https://avatars.dicebear.com/api/initials/{{ CURRENT_BOOK.driver.full_name }}.svg?width=80&height=80" width="80" height="80" class="rounded border" alt="">
                  {% endif %}
                  <div class="customer-details flex-fill ms-3">
                    <h5 class="card-title">{{ CURRENT_BOOK.driver.full_name }}</h5>
                    <a href="tel:{{ CURRENT_BOOK.driver.contact.number }}" class="rounded-pill btn btn-sm btn-outline-secondary">
                      <i class="las la-phone"></i>
                      Call
                    </a>
                    <a href="" class="rounded-pill ms-2 btn btn-sm btn-outline-secondary">
                      <i class="las la-sms"></i>
                      Chat
                    </a>
                  </div>
                </div>
              {% else %}
                <strong>Waiting for driver to accept your ride...</strong>
              {% endif %}
            </div>
            <div class="dropdown-divider"></div>
            <div class="card-body text-center">
              <p class="m-0">
                <i class="las la-map-marker"></i>
                {{ CURRENT_BOOK.ride.source.text }}
              </p>
              <i class="las la-arrow-down"></i>
              <p>
                <i class="las la-map-marker"></i>
                {{ CURRENT_BOOK.ride.destination.text }}
              </p>
              <p class="m-0">
                <small class="text-muted">
                  {{ CURRENT_BOOK.ride.duration|format_duration }} {{ CURRENT_BOOK.ride.distance|format_distance }}
                </small>
              </p>
            </div>
            <div class="card-footer d-flex justify-content-between">
              <strong>Total Fare:</strong>
              <strong>{{ CURRENT_BOOK.ride.fare|format_fare }}</strong>
            </div>
          </div>
        {% endif %}
      </main>
      {% if not CURRENT_BOOK %}
        <div class="position-fixed bottom-0 end-0 pe-none" style="z-index: 1000">
          <a href="#bookModal" role="button" class="btn btn-primary rounded-circle btn-square fs-3 shadow pe-auto btn-floating" data-bs-toggle="modal" title="Book a ride">
            <i class="las la-book"></i>
          </a>
        </div>
        <div class="modal fade" id="bookModal" tabindex="-1" aria-labelledby="bookModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
            <form action="/map/book" class="modal-content" method="POST">
              <div class="modal-header">
                <h5 class="modal-title" id="bookModalLabel">Book ride</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <input type="hidden" name="_id" value="{{ AUTHENTICATED_USER._id }}">
                <input type="hidden" name="source_latitude">
                <input type="hidden" name="source_longitude">
                <input type="hidden" name="source_text">
                <input type="hidden" name="destination_latitude">
                <input type="hidden" name="destination_longitude">
                <input type="hidden" name="destination_text">
                <input type="hidden" name="duration">
                <input type="hidden" name="distance">
                <input type="hidden" name="fare">

                <div id="error-book"></div>
                <h6 class="card-title">Your destination</h6>
                <p class="card-text text-muted">
                  Pin the location in the map where the driver will drop you off.
                </p>
                <div class="card mb-4">
                  <p class="position-absolute top-50 start-50 translate-middle">
                    <i class="las la-spinner la-spin"></i>
                    Loading please wait...
                  </p>
                  <div id="map-book" style="height: 360px"></div>
                  <noscript>
                    Cannot load the map, please turn on JavaScript
                  </noscript>
                </div>
                <div class="form-floating">
                  <textarea class="form-control" placeholder="Directions" id="directions"></textarea>
                  <label for="directions">Directions</label>
                </div>
                <div id="book-modal-details" class="d-none mt-4">
                  <div class="dropdown-divider"></div>
                  <div class="card-body text-center">
                    <p class="m-0">
                      <i class="las la-map-marker"></i>
                      <span class="book-source-label"></span>
                    </p>
                    <i class="las la-arrow-down"></i>
                    <p>
                      <i class="las la-map-marker"></i>
                      <span class="book-destination-label"></span>
                    </p>
                    <p class="m-0">
                      <small class="text-muted book-duration-label"></small>
                    </p>
                  </div>
                  <div class="card-footer d-flex justify-content-between">
                    <strong>Total Fare:</strong>
                    <strong class="book-fare-label"></strong>
                  </div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn text-muted" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" name="submit" class="btn btn-primary">Book ride</button>
              </div>
            </form>
          </div>
        </div>
      {% endif %}
      {% include "commuter/layouts/nav.twig" %}
    </div>
  </div>
{% endblock %}

{% block footer %}
  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      let coordinates = []
      let map = null
      let bookMap = null
      
      const geocodeService = L.esri.Geocoding.geocodeService();
      
      const requestLocation = () => {
        return new Promise((resolve, reject) => {
          if (!'geolocation' in navigator) {
            reject(new Error('Your browser does not support geolocation, please update it and try again.'))
            // showError('Your browser does not support geolocation, please update it and try again.')
          }

          navigator.geolocation.getCurrentPosition(
            pos => {
              // map = renderMap(pos.coords.latitude, pos.coords.longitude)
              const { latitude, longitude } = pos.coords

              geocodeService.reverse().latlng([latitude, longitude]).run(function(error, result) {
                if (error) {
                  reject(error)
                  return;
                }

                resolve({
                  latitude,
                  longitude,
                  text: result.address.LongLabel
                })

                // if (!localStorage.getItem('toggle')) {
                //   return;
                // }

                // if (localStorage.getItem('toggle') == 'true') {
                //   document.getElementById('switch').checked = true;
                //   socket.emit('active', coordinates, address);
                // }
              })
            },    
            () => {
              reject(new Error('Could not retrieve your current location, please turn on your location and try again.'))
              // showError('Could not retrieve your current location, please turn on your location and try again.')
            }
          )
        })
      }

      const renderMap = (latitude, longitude, text, id = 'map') => {
        if (typeof L != 'object') {
          return
        }

        const map = L.map(document.getElementById(id))
          .setView([latitude, longitude], 16);

        L.tileLayer('https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
          subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
          attribution: false,
          maxZoom: 20,
          minZoom: 13
        }).addTo(map);

        L.marker([latitude, longitude])
          .bindPopup(`
            ${text}
          `)
          .addTo(map)
          .openPopup();

        return map
      }

      const initializeBookMap = (latitude, longitude, text) => {
        const modalDOM = document.getElementById('bookModal')

        if (!modalDOM) {
          return
        }

        const modal = new bootstrap.Modal(modalDOM)
        const form = modalDOM.querySelector('form')

        modalDOM?.addEventListener('shown.bs.modal', function(e) {
          if (!bookMap) {
            bookMap = renderMap(latitude, longitude, text, 'map-book') 
            addGeoSearch(bookMap, L.marker(), form)
          }
        })

        form.source_latitude.value = latitude
        form.source_longitude.value = longitude
        form.source_text.value = text

        form?.addEventListener('submit', function(e) {
          e.preventDefault()

          const _id = this._id.value
          const source_latitude = this.source_latitude.value
          const source_longitude = this.source_longitude.value
          const source_text = this.source_text.value
          const destination_latitude = this.destination_latitude.value
          const destination_longitude = this.destination_longitude.value
          const destination_text = this.destination_text.value
          const directions = this.directions.value
          const distance = this.distance.value
          const duration = this.duration.value
          const fare = this.fare.value

          if (!source_latitude || !source_longitude || !destination_latitude || !destination_longitude) {
            return showError('Please select your destination.', 'error-book')
          }

          this.submit.disabled = true

          axios.post(this.action, {
            source: {
              coordinates: [parseFloat(source_longitude), parseFloat(source_latitude)],
              text: source_text
            },
            destination: {
              coordinates: [parseFloat(destination_longitude), parseFloat(destination_latitude)],
              text: destination_text
            },
            directions,
            distance,
            duration,
            fare,
            _id
          })
            .then(res => window.location.reload())
            .catch(err => showError((err.response.data.errors || ['Server error. Please contact your developer.'])[0], 'error-book'))

          this.submit.disabled = false
        })
      }

      const addGeoSearch = (map, marker, form) => {
        const arcgisOnline = L.esri.Geocoding.arcgisOnlineProvider({
          countries: ['PH']
        })

        const geoSearch = L.esri.Geocoding.geosearch({
          title: '',
          placeholder: 'Search your destination...',
          useMapBounds: false,
          providers: [
            arcgisOnline
          ]
        }).addTo(map)

        const setDestinationMarker = (lat, lng, text) => {
          form.destination_latitude.value = lat
          form.destination_longitude.value = lng
          form.destination_text.value = text

          marker.setLatLng([lat, lng])
            .bindPopup(`
              ${text}
            `)
            .addTo(map)
            .openPopup()

          axios.post('/api/ors/matrix', {
            locations: [
              [parseFloat(form.source_longitude.value), parseFloat(form.source_latitude.value)],
              [parseFloat(lng), parseFloat(lat)]
            ]
          })
            .then(res => {
              const formatter = new Intl.NumberFormat('en-US', {
                minimumFractionDigits: 2
              })

              const { distance, duration, fare } = res.data
              const details = document.getElementById('book-modal-details')

              details.querySelector('.book-source-label').innerText = form.source_text.value
              details.querySelector('.book-destination-label').innerText = form.destination_text.value
              details.querySelector('.book-duration-label').innerText = `Approx. ${Math.ceil(duration / 60)} mins. (${Math.ceil(distance)} km)`
              details.querySelector('.book-fare-label').innerText = `Php ${formatter.format(parseFloat(fare))}`

              details.classList.remove('d-none')

              form.distance.value = distance
              form.duration.value = duration
              form.fare.value = fare
            })
            .catch(err => showError((err.response.data.errors || ['Server error. Please contact your developer.'])[0], 'error-book'))
        }

        map.on('click', function(e) {
          geocodeService.reverse().latlng(e.latlng).run(function(error, result) {
            if (error) {
              return
            }

            const { LongLabel: text } = result.address
            const { lat, lng } = e.latlng

            setDestinationMarker(lat, lng, text)
          })
        })

        geoSearch.addEventListener('results', function(e) {
          if (e.results.length <= 0) {
            return;
          }
          
          const result = e.results[0];
          const { lat, lng } = result.latlng
          const text = result.text

          setDestinationMarker(lat, lng, text)
        })
      }

      try {
        const { latitude, longitude, text } = await requestLocation()
        coordinates = [longitude, latitude]

        map = renderMap(latitude, longitude, text)

        initializeBookMap(latitude, longitude, text)
      }
      catch(err) {
        showError(err.message)
      }
    })
  </script>
{% endblock %}